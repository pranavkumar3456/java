name: Build and Deploy to UAT Staging AKS

on:
  push:
    branches:
      - rakshak-review
  workflow_dispatch:
    inputs:
      action: # Specify what to do (build, deploy, etc.)
        description: 'Action to perform (start-runner, build, deploy, stop-runner)'
        required: true
        default: 'build'
      image_tag: # Optional image tag to override the GitHub SHA tag
        description: 'Image tag to use for Docker'
        required: false
      vm_name: # Optional VM name to override the default VM name
        description: 'VM name to start/stop'
        required: false
        default: 'lesspay-githubrunner-uat-001'

permissions:
  id-token: write  # This is required for requesting the JWT
  contents: read   # This is required for actions/checkout
  actions: read

env:
  REGISTRY_NAME: containerregnewns
  CLUSTER_NAME: lesspay-uat-aks-001
  CLUSTER_RESOURCE_GROUP: lesspay-app-uat-rg-001
  NAMESPACE: auth-service-uat-ns
  myimage: les-merchant-auth-microservice-rakshak-review

jobs:
  start-runner:
    if: ${{ github.event.inputs.action == 'start-runner' || github.event.inputs.action == 'build' || github.event.inputs.action == 'deploy' }} # Only run if the action is to start-runner, build, or deploy
    runs-on: ubuntu-latest
    steps:
      - name: Check and Install Azure CLI
        run: |
          if ! command -v az > /dev/null; then
            curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
          fi

      - name: Azure login
        uses: azure/login@v2
        with:
         creds: ${{ secrets.AZURE_CREDENTIALS }}
         
      - name: Set the context of the subscription
        run: az account set --subscription ${{ secrets.AZURE_SUBSCRIPTION_ID_HUB }}

      - name: Start VM if not already running.
        run: | 
          VM_STATUS=$(az vm get-instance-view --name ${{ github.event.inputs.vm_name }} --resource-group lesspay-githubrunner-rg-001 --query "instanceView.statuses[?code=='PowerState/running'] | [0].code" -o tsv)
          if [ "$VM_STATUS" != "PowerState/running" ]; then
            echo "VM is not running. Starting VM..."
            az vm start --name ${{ github.event.inputs.vm_name }} --resource-group lesspay-githubrunner-rg-001
          else
            echo "VM is already running."
          fi

  build:
    if: ${{ github.event.inputs.action == 'build' || github.event.inputs.action == 'deploy' }} # Only run if the action is to build or deploy
    needs: start-runner
    runs-on: self-hosted
    environment: staging
    steps:
      - uses: actions/checkout@v2
        with:
          ref: rakshak-review

      - name: Ensure Docker is installed
        run: |
          if ! command -v docker > /dev/null
          then
            echo "Docker could not be found, installing Docker..."
            curl -fsSL https://get.docker.com -o get-docker.sh
            sh get-docker.sh
            sudo usermod -aG docker $USER
            newgrp docker
          else
            echo "Docker is already installed"
          fi

      - name: Ensure kubectl is installed
        run: |
          if ! command -v kubectl &> /dev/null
          then
            echo "kubectl could not be found, installing kubectl..."
            curl -LO "https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl"
            chmod +x ./kubectl
            sudo mv ./kubectl /usr/local/bin/kubectl
          else
            echo "kubectl is already installed"
          fi

      - uses: azure/docker-login@v1
        with:
          login-server: ${{ env.REGISTRY_NAME }}.azurecr.io
          username: ${{ secrets.REGISTRY_USERNAME }} 
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Build and push staging uat images
        uses: docker/build-push-action@v5.0.0
        with:
          context: .
          push: true
          tags: ${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.myimage }}:${{ github.event.inputs.image_tag || github.sha }}

      - uses: azure/aks-set-context@v1
        with:
          creds: '${{ secrets.AZURE_CREDENTIALS }}'
          cluster-name: ${{ env.CLUSTER_NAME }}
          resource-group: ${{ env.CLUSTER_RESOURCE_GROUP }}

      - run: |
          kubectl create namespace ${{ env.NAMESPACE }} --dry-run=client -o yaml | kubectl apply -f -

      - uses: azure/k8s-create-secret@v1
        with:
          container-registry-url: ${{ env.REGISTRY_NAME }}.azurecr.io
          container-registry-username: ${{ secrets.REGISTRY_USERNAME }}
          container-registry-password: ${{ secrets.REGISTRY_PASSWORD }}
          secret-name: ${{ env.REGISTRY_NAME }}-registry-connection
          namespace: ${{ env.NAMESPACE }}

      - run: |
          export IMAGE_NAME=${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.myimage }}:${{ github.event.inputs.image_tag || github.sha }}
          envsubst < kubernetes/auth-deployment.yaml > kubernetes/auth-deployment-processed.yaml
          mv kubernetes/auth-deployment-processed.yaml kubernetes/auth-deployment.yaml

      - uses: azure/k8s-deploy@v1
        with:
          manifests: kubernetes/auth-deployment.yaml
          images: ${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.myimage }}:${{ github.event.inputs.image_tag || github.sha }}
          imagepullsecrets: ${{ env.REGISTRY_NAME }}-registry-connection
          namespace: ${{ env.NAMESPACE }}

      - run: |
          sudo docker rmi 84d141db7ca9 -f

  stop-runner:
    if: ${{ github.event.inputs.action == 'stop-runner' }} # Only run if the action is to stop-runner
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Azure login
        uses: azure/login@v2
        with:
         creds: ${{ secrets.AZURE_CREDENTIALS }}
         
      - name: Set the context of the subscription
        run: az account set --subscription ${{ secrets.AZURE_SUBSCRIPTION_ID_HUB }}

      - name: Stop runner.
        run: | 
            az vm deallocate --resource-group lesspay-githubrunner-rg-001 --name ${{ github.event.inputs.vm_name }}
